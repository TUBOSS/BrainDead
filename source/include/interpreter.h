/*******************************************************************************
 * Copyright (c) 2010, Jean-David Gadina - www.xs-labs.com
 * Distributed under the Boost Software License, Version 1.0.
 * 
 * Boost Software License - Version 1.0 - August 17th, 2003
 * 
 * Permission is hereby granted, free of charge, to any person or organization
 * obtaining a copy of the software and accompanying documentation covered by
 * this license (the "Software") to use, reproduce, display, distribute,
 * execute, and transmit the Software, and to prepare derivative works of the
 * Software, and to permit third-parties to whom the Software is furnished to
 * do so, all subject to the following:
 * 
 * The copyright notices in the Software and this entire statement, including
 * the above license grant, this restriction and the following disclaimer,
 * must be included in all copies of the Software, in whole or in part, and
 * all derivative works of the Software, unless such copies or derivative
 * works are solely in the form of machine-executable object code generated by
 * a source language processor.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 ******************************************************************************/

/* $Id$ */

/*!
 * @header      interpreter.h
 * @copyright   (c) 2010 - Jean-David Gadina - www.xs-labs.com
 * @abstract    BrainFuck interpreter functions
 */

#ifndef _BD_INTERPRETER_H_
#define _BD_INTERPRETER_H_
#pragma once

#ifdef __cplusplus
extern "C" {
#endif

/*!
 * @function    bd_debug
 * @abstract    Debugs a BrainFuck character
 * @param       character       The character to interpret
 * @param       stack           The BrainFuck stack
 * @param       debug           Wheter to print debug informations
 */
void bd_debug( char character, bd_stack * stack, bool debug, ... );

/*!
 * @function    bd_interpret_char
 * @abstract    Interprets a BrainFuck character
 * @param       character       The character to interpret
 * @param       stack           The BrainFuck stack
 * @param       debug           Wheter to print debug informations
 * @param       break_point     Wheter to enable '@' symbols (break point)
 * @param       stack_debug     Wheter to enable '$' symbols (stack debug)
 * @param       stack_reset     Wheter to enable '%' symbols (stack reset)
 * @result      void
 */
void bd_interpret_char( char character, bd_stack * stack, bool debug, bool break_point, bool stack_debug, bool stack_reset );

/*!
 * @function    bd_interpret
 * @abstract    Interprets BrainFuck code and displays the result to stdout
 * @param       xalloc          The number of stack cells to allocate at a time
 * @param       debug           Wheter to print debug informations
 * @param       break_point     Wheter to enable '@' symbols (break point)
 * @param       stack_debug     Wheter to enable '$' symbols (stack debug)
 * @param       stack_reset     Wheter to enable '%' symbols (stack reset)
 * @result      void
 */
void bd_interpret( unsigned int xalloc, bool debug, bool break_point, bool stack_debug, bool stack_reset );

/*!
 * @function    bd_interpret_file
 * @abstract    Interprets a file as BrainFuck code and displays the result to stdout
 * @param       file            The file handle
 * @param       xalloc          The number of stack cells to allocate at a time
 * @param       debug           Wheter to print debug informations
 * @param       break_point     Wheter to enable '@' symbols (break point)
 * @param       stack_debug     Wheter to enable '$' symbols (stack debug)
 * @param       stack_reset     Wheter to enable '%' symbols (stack reset)
 * @result      void
 */
void bd_interpret_file( FILE * file, unsigned int xalloc, unsigned int xread, bool debug, bool break_point, bool stack_debug, bool stack_reset );

#ifdef __cplusplus
}
#endif

#endif /* _BD_MACROS_H_ */

